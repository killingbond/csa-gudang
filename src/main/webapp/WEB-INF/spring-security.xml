<!-- Spring namespace-based configuration -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	       http://www.springframework.org/schema/aop   
		   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd                        
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<!-- ====================================================== -->
	<!-- For catching the @Secured annotation methods -->
	<!-- Tells the Spring Security engine that we will use Spring Security's -->
	<!-- pre and post invocation Java annotations (@PreFilter, @PreAuthorize, -->
	<!-- @PostFilter, -->
	<!-- @PostAuthorize) to secure service layer methods.. -->
	<!-- Look in GFCBaseCtrl.java onEvent() method. -->
	<!-- ====================================================== -->

	<!-- Enable the @Secured annotation to secure service layer methods -->
	

	<http auto-config="true">

		<!-- ====================================================== -->
		<!-- If we have our own LoginPage. So we must -->
		<!-- tell Spring the name and the place. -->
		<!-- In our case we take the same page -->
		<!-- for a error message by a failure. -->
		<!-- Further the page after a successfully login. -->
		<!-- ====================================================== -->
		<form-login login-page="/login.zul"
			authentication-failure-url="/login.zul?login_error=1"
			default-target-url="/" always-use-default-target="true" />
		<intercept-url pattern="/login.zul" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- <intercept-url pattern="/*.zul" access="IS_AUTHENTICATED_REMEMBERED" /> -->
		<intercept-url pattern="/index.zul" access="ROLE_ADMIN,ROLE_OWNER,ROLE_MARKETING,ROLE_STOKISH" />
		<intercept-url pattern="/user.zul" access="ROLE_ADMIN,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/roles.zul" access="ROLE_ADMIN,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/supplier.zul" access="ROLE_ADMIN,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/client.zul" access="ROLE_ADMIN,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/quantity.zul" access="ROLE_ADMIN,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/items.zul" access="ROLE_ADMIN,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/itemsquantity.zul" access="ROLE_ADMIN,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/quantityconversion.zul" access="ROLE_ADMIN,ROLE_OWNER" />
		<intercept-url pattern="/transaksiin.zul" access="ROLE_STOKISH,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/transaksiinadd.zul" access="ROLE_STOKISH,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/transaksiinupdate.zul" access="ROLE_STOKISH,ROLE_OWNER,ROLE_MARKETING" />
		<intercept-url pattern="/transaksiout.zul" access="ROLE_STOKISH,ROLE_OWNER" /> 
		<intercept-url pattern="/transaksioutadd.zul" access="ROLE_STOKISH,ROLE_OWNER" /> 
		<intercept-url pattern="/transaksioutupdate.zul" access="ROLE_STOKISH,ROLE_OWNER" /> 
		<intercept-url pattern="/stock.zul" access="ROLE_STOKISH,ROLE_OWNER" /> 
		
	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="myUserDetailsService">
		</authentication-provider>
	</authentication-manager>


</beans:beans>


